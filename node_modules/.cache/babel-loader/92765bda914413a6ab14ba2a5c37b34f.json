{"ast":null,"code":"var _jsxFileName = \"/Users/Maria/Desktop/employee-directory/src/App.js\";\nimport React, { Component } from \"react\";\nimport UserCard from \"./components/UserCard\";\nimport SearchForm from \"./components/SearchForm\";\nimport SearchResults from \"./components/SearchResults\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport users from \"./users.json\";\nimport API from \"./users.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users,\n      search: \"\",\n      results: [],\n      ids: [],\n      error: \"\"\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      API.getId(this.state.search).then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n\n        this.setState({\n          results: res.data.message,\n          error: \"\"\n        });\n      }).catch(err => this.setState({\n        error: err.message\n      }));\n    };\n\n    this.removeFriend = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const users = this.state.users.filter(user => user.id !== id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        users\n      });\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Employee Directory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n        handleFormSubmit: this.handleFormSubmit,\n        handleInputChange: this.handleInputChange,\n        ids: this.state.ids\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n        results: this.state.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), this.state.users.map(user => /*#__PURE__*/_jsxDEV(UserCard, {\n        removeFriend: this.removeFriend,\n        id: user.id,\n        name: user.name,\n        image: user.image,\n        occupation: user.occupation,\n        location: user.location\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Maria/Desktop/employee-directory/src/App.js"],"names":["React","Component","UserCard","SearchForm","SearchResults","Wrapper","Title","users","API","App","state","search","results","ids","error","handleInputChange","event","setState","target","value","handleFormSubmit","preventDefault","getId","then","res","data","status","Error","message","catch","err","removeFriend","id","filter","user","render","map","name","image","occupation","location"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport UserCard from \"./components/UserCard\";\nimport SearchForm from \"./components/SearchForm\";\nimport SearchResults from \"./components/SearchResults\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport users from \"./users.json\";\nimport API from \"./users.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    users,\n    search: \"\",\n    results: [],\n    ids: [],\n    error: \"\",\n  };\n\n  // componentDidMount() {\n  //   API.getIdsList()\n  //     .then((res) => this.setState({ ids: res.data.message }))\n  //     .catch((err) => console.log(err));\n  // }\n\n  handleInputChange = (event) => {\n    this.setState({ search: event.target.value });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    API.getId(this.state.search)\n      .then((res) => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n        this.setState({ results: res.data.message, error: \"\" });\n      })\n      .catch((err) => this.setState({ error: err.message }));\n  };\n\n  removeFriend = (id) => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const users = this.state.users.filter((user) => user.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ users });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Employee Directory</Title>\n        <SearchForm\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n          ids={this.state.ids}\n        />\n        <SearchResults results={this.state.results} />\n        {this.state.users.map((user) => (\n          <UserCard\n            removeFriend={this.removeFriend}\n            id={user.id}\n            key={user.id}\n            name={user.name}\n            image={user.image}\n            occupation={user.occupation}\n            location={user.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}