{"ast":null,"code":"var _jsxFileName = \"/Users/Maria/Desktop/employee-directory/src/App.js\";\nimport React, { Component } from \"react\";\nimport UserCard from \"./components/UserCard\";\nimport SearchForm from \"./components/SearchForm\"; //import SearchResults from \"./components/SearchResults\";\n\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport users from \"./users.json\"; //import API from \"./components/utils/API\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users,\n      search: \"\",\n      results: [],\n      ids: [],\n      error: \"\"\n    };\n\n    this.findUser = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const users = this.state.users.filter(user => user.id !== id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        users\n      });\n    };\n\n    this.removeFriend = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const users = this.state.users.filter(user => user.id !== id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        users\n      });\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Employee Directory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n        handleFormSubmit: this.handleFormSubmit,\n        handleInputChange: this.handleInputChange,\n        ids: this.state.ids\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), this.state.users.map(user => /*#__PURE__*/_jsxDEV(UserCard, {\n        removeFriend: this.removeFriend,\n        id: user.id,\n        name: user.name,\n        image: user.image,\n        occupation: user.occupation,\n        location: user.location\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Maria/Desktop/employee-directory/src/App.js"],"names":["React","Component","UserCard","SearchForm","Wrapper","Title","users","App","state","search","results","ids","error","findUser","id","filter","user","setState","removeFriend","render","handleFormSubmit","handleInputChange","map","name","image","occupation","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB,C,CACA;;;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNF,MAAAA,KADM;AAENG,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,GAAG,EAAE,EAJC;AAKNC,MAAAA,KAAK,EAAE;AALD,KAFkB;;AAAA,SAgC1BC,QAhC0B,GAgCdC,EAAD,IAAQ;AACjB;AACA,YAAMR,KAAK,GAAG,KAAKE,KAAL,CAAWF,KAAX,CAAiBS,MAAjB,CAAyBC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAA9C,CAAd,CAFiB,CAGjB;;AACA,WAAKG,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AACD,KArCyB;;AAAA,SAuC1BY,YAvC0B,GAuCVJ,EAAD,IAAQ;AACrB;AACA,YAAMR,KAAK,GAAG,KAAKE,KAAL,CAAWF,KAAX,CAAiBS,MAAjB,CAAyBC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAA9C,CAAd,CAFqB,CAGrB;;AACA,WAAKG,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AACD,KA5CyB;AAAA;;AA8C1B;AACAa,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,OAAD;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACE,QAAA,gBAAgB,EAAE,KAAKC,gBADzB;AAEE,QAAA,iBAAiB,EAAE,KAAKC,iBAF1B;AAGE,QAAA,GAAG,EAAE,KAAKb,KAAL,CAAWG;AAHlB;AAAA;AAAA;AAAA;AAAA,cAFF,EAQG,KAAKH,KAAL,CAAWF,KAAX,CAAiBgB,GAAjB,CAAsBN,IAAD,iBACpB,QAAC,QAAD;AACE,QAAA,YAAY,EAAE,KAAKE,YADrB;AAEE,QAAA,EAAE,EAAEF,IAAI,CAACF,EAFX;AAIE,QAAA,IAAI,EAAEE,IAAI,CAACO,IAJb;AAKE,QAAA,KAAK,EAAEP,IAAI,CAACQ,KALd;AAME,QAAA,UAAU,EAAER,IAAI,CAACS,UANnB;AAOE,QAAA,QAAQ,EAAET,IAAI,CAACU;AAPjB,SAGOV,IAAI,CAACF,EAHZ;AAAA;AAAA;AAAA;AAAA,cADD,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAtEyB;;AAyE5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport UserCard from \"./components/UserCard\";\nimport SearchForm from \"./components/SearchForm\";\n//import SearchResults from \"./components/SearchResults\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport users from \"./users.json\";\n//import API from \"./components/utils/API\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    users,\n    search: \"\",\n    results: [],\n    ids: [],\n    error: \"\",\n  };\n\n  // componentDidMount() {\n  //   API.getBaseBreedsList()\n  //     .then((res) => this.setState({ users: res.data.message }))\n  //     .catch((err) => console.log(err));\n  // }\n\n  // handleInputChange = (event) => {\n  //   this.setState({ search: event.target.value });\n  // };\n\n  // handleFormSubmit = (event) => {\n  //   event.preventDefault();\n  //   API.getDogsOfBreed(this.state.search)\n  //     .then((res) => {\n  //       if (res.data.status === \"error\") {\n  //         throw new Error(res.data.message);\n  //       }\n  //       this.setState({ results: res.data.message, error: \"\" });\n  //     })\n  //     .catch((err) => this.setState({ error: err.message }));\n  // };\n\n  findUser = (id) => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const users = this.state.users.filter((user) => user.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ users });\n  };\n\n  removeFriend = (id) => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const users = this.state.users.filter((user) => user.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ users });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Employee Directory</Title>\n        <SearchForm\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n          ids={this.state.ids}\n        />\n        {/* <SearchResults results={this.state.results} /> */}\n        {this.state.users.map((user) => (\n          <UserCard\n            removeFriend={this.removeFriend}\n            id={user.id}\n            key={user.id}\n            name={user.name}\n            image={user.image}\n            occupation={user.occupation}\n            location={user.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}